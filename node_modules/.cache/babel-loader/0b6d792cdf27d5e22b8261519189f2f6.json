{"ast":null,"code":"import _regeneratorRuntime from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js\";\nimport React, { Component } from 'react';\n\nvar MarketsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarketsContainer, _Component);\n\n  function MarketsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MarketsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketsContainer).call(this));\n    _this.fetchCharacters =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://api.binance.com/api/v1/exchangeInfo');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n\n              _this.setState({\n                data: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    state = {\n      data: {\n        symbols: []\n      } //isLoaded: false,\n\n    };\n    return _this;\n  } // _getTickerBySymbol(data) {\n  //       let ticker = {}\n  //       data.forEach(item => {\n  //           let symbol = item.symbol || item.s;\n  //           ticker[symbol] = {\n  //               symbol: symbol,\n  //               lastPrice: item.lastPrice || item.c,\n  //               priceChange: item.priceChange || item.p,\n  //               priceChangePercent: item.priceChangePercent || item.P,\n  //               highPrice: item.highPrice || item.h,\n  //               lowPrice: item.lowPrice || item.l,\n  //               quoteVolume: item.quoteVolume || item.q,\n  //           }\n  //       })\n  //       return ticker;\n  //       \n  //   }\n  //\n  //\n\n\n  _createClass(MarketsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCharacters(); //    var milnit = { method: 'GET', mode: 'no-cors'};\n      //\n      //    fetch('https://api.binance.com/api/v1/exchangeInfo', milnit )\n      //\n      //        .then(response  => response.json())\n      //        .then(json => {\n      //              this.setState({\n      //                isLoaded: true, \n      //                items: json,\n      //                \n      //              })\n      //            \n      //      \n      //        });\n      //        \n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // var { isLoaded , items } = this.state;\n      //if(!isLoaded){\n      //  return <div>Loading...</div>\n      //}\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, items.map(function (item) {}));\n    }\n  }]);\n\n  return MarketsContainer;\n}(Component);\n\nexport default MarketsContainer;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js"],"names":["React","Component","MarketsContainer","props","fetchCharacters","fetch","response","json","data","setState","state","symbols","items","map","item"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAIMC,gB;;;;;AAEJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AADiB,UAoDnBC,eApDmB;AAAA;AAAA;AAAA;AAAA,6BAoDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOC,KAAK,CAAC,6CAAD,CADZ;;AAAA;AACVC,cAAAA,QADU;AAAA;AAAA,qBAEGA,QAAQ,CAACC,IAAT,EAFH;;AAAA;AAEVC,cAAAA,IAFU;;AAIhB,oBAAKC,QAAL,CAAe;AACdD,gBAAAA,IAAI,EAAEA;AADQ,eAAf;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KApDC;AAEfE,IAAAA,KAAK,GAAG;AACNF,MAAAA,IAAI,EAAE;AACJG,QAAAA,OAAO,EAAE;AADL,OADA,CAIN;;AAJM,KAAR;AAFe;AASpB,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA;;;;;wCACmB;AAEjB,WAAKP,eAAL,GAFiB,CAKnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;;;6BAWS;AACP;AACC;AACA;AACA;AAEI,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGQ,KAAK,CAACC,GAAN,CAAW,UAAAC,IAAI,EAAI,CAElB,CAFD,CADH,CADF;AASL;;;;EA/E4Bb,S;;AAkF/B,eAAeC,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass MarketsContainer extends Component{\n\n  constructor(props) {\n    super();\n      state = {\n        data: {\n          symbols: []\n        },\n        //isLoaded: false,\n      };\n \n}\n\n // _getTickerBySymbol(data) {\n //       let ticker = {}\n //       data.forEach(item => {\n //           let symbol = item.symbol || item.s;\n //           ticker[symbol] = {\n //               symbol: symbol,\n //               lastPrice: item.lastPrice || item.c,\n //               priceChange: item.priceChange || item.p,\n //               priceChangePercent: item.priceChangePercent || item.P,\n //               highPrice: item.highPrice || item.h,\n //               lowPrice: item.lowPrice || item.l,\n //               quoteVolume: item.quoteVolume || item.q,\n //           }\n //       })\n //       return ticker;\n //       \n //   }\n//\n//\ncomponentDidMount(){\n\n  this.fetchCharacters();\n\n\n//    var milnit = { method: 'GET', mode: 'no-cors'};\n//\n//    fetch('https://api.binance.com/api/v1/exchangeInfo', milnit )\n//\n//        .then(response  => response.json())\n//        .then(json => {\n//              this.setState({\n//                isLoaded: true, \n//                items: json,\n//                \n//              })\n//            \n//      \n//        });\n//        \n        \n}\n  fetchCharacters = async () => {\n    const response = await fetch('https://api.binance.com/api/v1/exchangeInfo')\n    const data = await response.json();\n  \n    this.setState ({\n     data: data,\n    });\n  }\n\n\n  render(){\n   // var { isLoaded , items } = this.state;\n    //if(!isLoaded){\n    //  return <div>Loading...</div>\n    //}\n    \n        return(\n          <div>\n            {items.map( item => {\n            \n             }\n            )}\n          </div>\n        )\n    \n  }\n}\n\nexport default MarketsContainer;\n"]},"metadata":{},"sourceType":"module"}