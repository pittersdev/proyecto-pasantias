{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/price-row/price-row.js\";\nimport React, { Component } from 'react';\nimport './price-row.css';\n\nvar PriceRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PriceRow, _Component);\n\n  function PriceRow(props) {\n    var _this;\n\n    _classCallCheck(this, PriceRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PriceRow).call(this));\n    _this.state = {\n      pricerow: []\n    };\n    return _this;\n  }\n\n  _createClass(PriceRow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //return fetch('http://192.168.0.100:4440/24h')\n      return fetch('https://api.binance.com/api/v1/ticker/24hr').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this2.setState({\n          pricerow: responseJson\n        });\n      }).catch(function (error) {\n        if (error === 'TypeError: Network request failed') {\n          console.log('error internet');\n        }\n\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"ETH/BTC\"));\n    }\n  }]);\n\n  return PriceRow;\n}(Component);\n\nexport default PriceRow;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/price-row/price-row.js"],"names":["React","Component","PriceRow","props","state","pricerow","fetch","then","response","json","responseJson","console","log","setState","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,iBAAP;;IAGMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AAEE,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAHe;AAMpB;;;;wCACkB;AAAA;;AAEjB;AACA,aAAOC,KAAK,CAAC,4CAAD,CAAL,CAEKC,IAFL,CAEU,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAFV,EAGKF,IAHL,CAGU,UAACG,YAAD,EAAkB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACC,QAAA,MAAI,CAACG,QAAL,CAAc;AACdR,UAAAA,QAAQ,EAAEK;AADI,SAAd;AAIF,OATL,EAUKI,KAVL,CAUW,UAACC,KAAD,EAAW;AAChB,YAAGA,KAAK,KAAK,mCAAb,EAAiD;AAC/CJ,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AACDD,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,OAfL,CAAP;AAgBD;;;6BAIS;AAEN,aACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADA;AAOD;;;;EAzCoBd,S;;AA6CvB,eAAeC,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport './price-row.css';\n\n\nclass PriceRow extends Component {\n\n  constructor(props) {\n    super();\n\n      this.state = {\n        pricerow: [],\n      };\n}\ncomponentDidMount(){\n\n  //return fetch('http://192.168.0.100:4440/24h')\n  return fetch('https://api.binance.com/api/v1/ticker/24hr')\n            \n             .then((response) => response.json())\n             .then((responseJson) => {\n               console.log(responseJson)      \n                this.setState({\n                pricerow: responseJson\n                 \n               })\n             })\n             .catch((error) => {\n               if(error === 'TypeError: Network request failed'){\n                 console.log('error internet')\n               }\n               console.error(error);\n             });      \n}\n \n\n\n  render(){\n\n    return(\n    <div className=\"price\">\n      <th>ETH/BTC</th>\n    </div>\n\n  \n    );\n  }\n\n}\n\nexport default PriceRow;\n"]},"metadata":{},"sourceType":"module"}