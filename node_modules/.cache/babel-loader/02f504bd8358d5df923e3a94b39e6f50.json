{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js\";\nimport React, { Component } from 'react';\n\nvar MarketsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarketsContainer, _Component);\n\n  function MarketsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MarketsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketsContainer).call(this));\n    state = {\n      items: {\n        symbols: []\n      } //isLoaded: false,\n\n    };\n    return _this;\n  } // _getTickerBySymbol(data) {\n  //       let ticker = {}\n  //       data.forEach(item => {\n  //           let symbol = item.symbol || item.s;\n  //           ticker[symbol] = {\n  //               symbol: symbol,\n  //               lastPrice: item.lastPrice || item.c,\n  //               priceChange: item.priceChange || item.p,\n  //               priceChangePercent: item.priceChangePercent || item.P,\n  //               highPrice: item.highPrice || item.h,\n  //               lowPrice: item.lowPrice || item.l,\n  //               quoteVolume: item.quoteVolume || item.q,\n  //           }\n  //       })\n  //       return ticker;\n  //       \n  //   }\n  //\n  //\n\n\n  _createClass(MarketsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //this.fetchCharacters();\n      var milnit = {\n        method: 'GET',\n        mode: 'no-cors'\n      };\n      fetch('https://api.binance.com/api/v1/exchangeInfo', milnit).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    } //  fetchCharacters = async () => {\n    //    const response = await fetch('https://api.binance.com/api/v1/exchangeInfo')\n    //    const data = await response.json();\n    //  \n    //    this.setState ({\n    //     data: data,\n    //    });\n    //  }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, items.map(function (item) {}));\n      }\n    }\n  }]);\n\n  return MarketsContainer;\n}(Component);\n\nexport default MarketsContainer;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js"],"names":["React","Component","MarketsContainer","props","state","items","symbols","milnit","method","mode","fetch","then","response","json","setState","isLoaded","map","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAIMC,gB;;;;;AAEJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACEC,IAAAA,KAAK,GAAG;AACNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OADD,CAIN;;AAJM,KAAR;AAFe;AASpB,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA;;;;;wCACmB;AAAA;;AACf;AAGA,UAAIC,MAAM,GAAG;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAb;AAEAC,MAAAA,KAAK,CAAC,6CAAD,EAAgDH,MAAhD,CAAL,CAEKI,IAFL,CAEU,UAAAC,QAAQ;AAAA,eAAKA,QAAQ,CAACC,IAAT,EAAL;AAAA,OAFlB,EAGKF,IAHL,CAGU,UAAAE,IAAI,EAAI;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZV,UAAAA,KAAK,EAAEQ;AAFK,SAAd;AAOL,OAXL;AAcH,K,CACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAGM;AAAA,wBACqB,KAAKT,KAD1B;AAAA,UACAW,QADA,eACAA,QADA;AAAA,UACWV,KADX,eACWA,KADX;;AAEN,UAAG,CAACU,QAAJ,EAAa;AACX,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAGK;AAED,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGV,KAAK,CAACW,GAAN,CAAW,UAAAC,IAAI,EAAI,CAEnB,CAFA,CADH,CADF;AAWH;AACF;;;;EAlF4BhB,S;;AAqF/B,eAAeC,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass MarketsContainer extends Component{\n\n  constructor(props) {\n    super();\n      state = {\n        items: {\n          symbols: []\n        },\n        //isLoaded: false,\n      };\n \n}\n\n // _getTickerBySymbol(data) {\n //       let ticker = {}\n //       data.forEach(item => {\n //           let symbol = item.symbol || item.s;\n //           ticker[symbol] = {\n //               symbol: symbol,\n //               lastPrice: item.lastPrice || item.c,\n //               priceChange: item.priceChange || item.p,\n //               priceChangePercent: item.priceChangePercent || item.P,\n //               highPrice: item.highPrice || item.h,\n //               lowPrice: item.lowPrice || item.l,\n //               quoteVolume: item.quoteVolume || item.q,\n //           }\n //       })\n //       return ticker;\n //       \n //   }\n//\n//\ncomponentDidMount(){\n    //this.fetchCharacters();\n\n\n    var milnit = { method: 'GET', mode: 'no-cors'};\n\n    fetch('https://api.binance.com/api/v1/exchangeInfo', milnit )\n\n        .then(response  => response.json())\n        .then(json => {\n              this.setState({\n                isLoaded: true, \n                items: json,\n                \n              })\n            \n      \n        });\n        \n        \n}\n    //  fetchCharacters = async () => {\n    //    const response = await fetch('https://api.binance.com/api/v1/exchangeInfo')\n    //    const data = await response.json();\n    //  \n    //    this.setState ({\n    //     data: data,\n    //    });\n    //  }\n\n\n  render(){\n    var { isLoaded , items } = this.state;\n    if(!isLoaded){\n      return <div>Loading...</div>\n    }\n    else {\n\n        return(\n          <div>\n            {items.map( item => {\n            \n            }\n\n            \n\n            )}\n          </div>\n        )\n    }\n  }\n}\n\nexport default MarketsContainer;\n"]},"metadata":{},"sourceType":"module"}