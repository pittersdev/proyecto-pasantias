{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/price-row/price-row.js\";\nimport React, { Component } from 'react';\nimport './price-row.css';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nvar PriceRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PriceRow, _Component);\n\n  function PriceRow(props) {\n    var _this;\n\n    _classCallCheck(this, PriceRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PriceRow).call(this));\n    _this.state = {\n      pricerow: []\n    };\n    return _this;\n  }\n\n  _createClass(PriceRow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //return fetch('http://192.168.0.100:4000/24h')\n      return fetch('https://api.binance.com/api/v1/ticker/24hr').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        _this2.setState({\n          pricerow: responseJson\n        });\n      }).catch(function (error) {\n        if (error === 'TypeError: Network request failed') {\n          console.log('error internet');\n        }\n\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CardDeck, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"./images/cardethbtc.jpeg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"BTC/ETH\"), this.state.priceRow.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item.symbol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, item));\n      }))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"./images/bitcoindolar.jpg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"BTC/USDT\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"This card has supporting text below as a natural lead-in to additional content.\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"./images/ripple-xrp-btc.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"BTC/XRP\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"./images/ltc-btc.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"BTC/LTC\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"./images/El-Bitcoin.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"BTC/BCH\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.\"))));\n    }\n  }]);\n\n  return PriceRow;\n}(Component);\n\nexport default PriceRow;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/price-row/price-row.js"],"names":["React","Component","Card","CardDeck","PriceRow","props","state","pricerow","fetch","then","response","json","responseJson","console","log","setState","catch","error","priceRow","map","item","symbol"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './price-row.css';\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck'\nclass PriceRow extends Component {\n\n  constructor(props) {\n    super();\n\n      this.state = {\n        pricerow: [],\n      };\n}\ncomponentDidMount(){\n\n  //return fetch('http://192.168.0.100:4000/24h')\n  return fetch('https://api.binance.com/api/v1/ticker/24hr')\n            \n             .then((response) => response.json())\n             .then((responseJson) => {\n               console.log(responseJson)      \n                this.setState({\n                pricerow: responseJson\n                 \n               })\n               \n             })\n             .catch((error) => {\n               if(error === 'TypeError: Network request failed'){\n                 console.log('error internet')\n               }\n               console.error(error);\n             });      \n}\n \n\n\n  render(){\n\n    return(\n        <CardDeck>\n          <Card>\n            <Card.Img variant=\"top\" src=\"./images/cardethbtc.jpeg\"alt=\"\" />\n            <Card.Body>\n              <Card.Title>BTC/ETH</Card.Title>\n              \n              {this.state.priceRow.map(item => (\n\n                  <tr key={item.symbol}>\n                   <p>{item}</p>\n                  </tr>\n                  \n                ))}\n            \n            </Card.Body>\n          \n          </Card>\n          <Card>\n            <Card.Img variant=\"top\" src=\"./images/bitcoindolar.jpg\" alt=\"\" />\n            <Card.Body>\n              <Card.Title>BTC/USDT</Card.Title>\n              <Card.Text>\n                This card has supporting text below as a natural lead-in to additional\n                content.\n              </Card.Text>\n            </Card.Body>\n           \n          </Card>\n          <Card>\n            <Card.Img variant=\"top\" src=\"./images/ripple-xrp-btc.jpg\" />\n            <Card.Body>\n              <Card.Title>BTC/XRP</Card.Title>\n              <Card.Text>\n                This is a wider card with supporting text below as a natural lead-in to\n                additional content. This card has even longer content than the first to\n                show that equal height action.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          <Card>\n            <Card.Img variant=\"top\" src=\"./images/ltc-btc.jpg\" />\n            <Card.Body>\n              <Card.Title>BTC/LTC</Card.Title>\n              <Card.Text>\n                This is a wider card with supporting text below as a natural lead-in to\n                additional content. This card has even longer content than the first to\n                show that equal height action.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          <Card>\n            <Card.Img variant=\"top\" src=\"./images/El-Bitcoin.jpg\"/>\n            <Card.Body>\n              <Card.Title>BTC/BCH</Card.Title>\n              <Card.Text>\n                This is a wider card with supporting text below as a natural lead-in to\n                additional content. This card has even longer content than the first to\n                show that equal height action.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n        \n    );\n  }\n\n}\n\nexport default PriceRow;\n"]},"metadata":{},"sourceType":"module"}