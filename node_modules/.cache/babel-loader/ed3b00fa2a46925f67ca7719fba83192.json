{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/grafits/TVChartContainer/index.jsx\";\nimport * as React from 'react';\nimport './index.css';\nimport { widget } from '../../charting_library/charting_library.min';\n\nfunction getLanguageFromURL() {\n  var regex = new RegExp('[\\\\?&]lang=([^&#]*)');\n  var results = regex.exec(window.location.search);\n  return results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport var TVChartContainer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TVChartContainer, _React$PureComponent);\n\n  function TVChartContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TVChartContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TVChartContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.tvWidget = null;\n    return _this;\n  }\n\n  _createClass(TVChartContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var widgetOptions = {\n        symbol: this.props.symbol,\n        // BEWARE: no trailing slash is expected in feed URL\n        datafeed: new window.Datafeeds.UDFCompatibleDatafeed(this.props.datafeedUrl),\n        interval: this.props.interval,\n        container_id: this.props.containerId,\n        library_path: this.props.libraryPath,\n        locale: getLanguageFromURL() || 'en',\n        disabled_features: ['use_localstorage_for_settings'],\n        enabled_features: ['study_templates'],\n        charts_storage_url: this.props.chartsStorageUrl,\n        charts_storage_api_version: this.props.chartsStorageApiVersion,\n        client_id: this.props.clientId,\n        user_id: this.props.userId,\n        fullscreen: this.props.fullscreen,\n        autosize: this.props.autosize,\n        studies_overrides: this.props.studiesOverrides\n      };\n      var tvWidget = new widget(widgetOptions);\n      this.tvWidget = tvWidget;\n      tvWidget.onChartReady(function () {\n        var button = tvWidget.createButton().attr('title', 'Click to show a notification popup').addClass('apply-common-tooltip').on('click', function () {\n          return tvWidget.showNoticeDialog({\n            title: 'Notification',\n            body: 'TradingView Charting Library API works correctly',\n            callback: function callback() {\n              console.log('Noticed!');\n            }\n          });\n        });\n        button[0].innerHTML = 'Check API';\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tvWidget !== null) {\n        this.tvWidget.remove();\n        this.tvWidget = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.containerId,\n        className: 'TVChartContainer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TVChartContainer;\n}(React.PureComponent);\nTVChartContainer.defaultProps = {\n  symbol: 'AAPL',\n  interval: 'D',\n  containerId: 'tv_chart_container',\n  datafeedUrl: 'https://demo_feed.tradingview.com',\n  libraryPath: '/charting_library/',\n  chartsStorageUrl: 'https://saveload.tradingview.com',\n  chartsStorageApiVersion: '1.1',\n  clientId: 'tradingview.com',\n  userId: 'public_user_id',\n  fullscreen: false,\n  autosize: true,\n  studiesOverrides: {}\n};\nexport default TVChartContainer;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/grafits/TVChartContainer/index.jsx"],"names":["React","widget","getLanguageFromURL","regex","RegExp","results","exec","window","location","search","decodeURIComponent","replace","TVChartContainer","tvWidget","widgetOptions","symbol","props","datafeed","Datafeeds","UDFCompatibleDatafeed","datafeedUrl","interval","container_id","containerId","library_path","libraryPath","locale","disabled_features","enabled_features","charts_storage_url","chartsStorageUrl","charts_storage_api_version","chartsStorageApiVersion","client_id","clientId","user_id","userId","fullscreen","autosize","studies_overrides","studiesOverrides","onChartReady","button","createButton","attr","addClass","on","showNoticeDialog","title","body","callback","console","log","innerHTML","remove","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport './index.css';\nimport { widget } from '../../charting_library/charting_library.min';\n\n\nfunction getLanguageFromURL() {\n\tconst regex = new RegExp('[\\\\?&]lang=([^&#]*)');\n\tconst results = regex.exec(window.location.search);\n\treturn results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\n\nexport class TVChartContainer extends React.PureComponent {\n\tstatic defaultProps = {\n\t\tsymbol: 'AAPL',\n\t\tinterval: 'D',\n\t\tcontainerId: 'tv_chart_container',\n\t\tdatafeedUrl: 'https://demo_feed.tradingview.com',\n\t\tlibraryPath: '/charting_library/',\n\t\tchartsStorageUrl: 'https://saveload.tradingview.com',\n\t\tchartsStorageApiVersion: '1.1',\n\t\tclientId: 'tradingview.com',\n\t\tuserId: 'public_user_id',\n\t\tfullscreen: false,\n\t\tautosize: true,\n\t\tstudiesOverrides: {},\n\t};\n\n\ttvWidget = null;\n\n\tcomponentDidMount() {\n\t\tconst widgetOptions = {\n\t\t\tsymbol: this.props.symbol,\n\t\t\t// BEWARE: no trailing slash is expected in feed URL\n\t\t\tdatafeed: new window.Datafeeds.UDFCompatibleDatafeed(this.props.datafeedUrl),\n\t\t\tinterval: this.props.interval,\n\t\t\tcontainer_id: this.props.containerId,\n\t\t\tlibrary_path: this.props.libraryPath,\n\n\t\t\tlocale: getLanguageFromURL() || 'en',\n\t\t\tdisabled_features: ['use_localstorage_for_settings'],\n\t\t\tenabled_features: ['study_templates'],\n\t\t\tcharts_storage_url: this.props.chartsStorageUrl,\n\t\t\tcharts_storage_api_version: this.props.chartsStorageApiVersion,\n\t\t\tclient_id: this.props.clientId,\n\t\t\tuser_id: this.props.userId,\n\t\t\tfullscreen: this.props.fullscreen,\n\t\t\tautosize: this.props.autosize,\n\t\t\tstudies_overrides: this.props.studiesOverrides,\n\t\t};\n\n\t\tconst tvWidget = new widget(widgetOptions);\n\t\tthis.tvWidget = tvWidget;\n\n\t\ttvWidget.onChartReady(() => {\n\t\t\tconst button = tvWidget.createButton()\n\t\t\t\t.attr('title', 'Click to show a notification popup')\n\t\t\t\t.addClass('apply-common-tooltip')\n\t\t\t\t.on('click', () => tvWidget.showNoticeDialog({\n\t\t\t\t\ttitle: 'Notification',\n\t\t\t\t\tbody: 'TradingView Charting Library API works correctly',\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\tconsole.log('Noticed!');\n\t\t\t\t\t},\n\t\t\t\t}));\n\n\t\t\tbutton[0].innerHTML = 'Check API';\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.tvWidget !== null) {\n\t\t\tthis.tvWidget.remove();\n\t\t\tthis.tvWidget = null;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={ this.props.containerId }\n\t\t\t\tclassName={ 'TVChartContainer' }\n\t\t\t/>\n\t\t);\n\t}\n}\nexport default TVChartContainer;\n"]},"metadata":{},"sourceType":"module"}