{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js\";\nimport React, { Component } from 'react';\n\nvar MarketsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarketsContainer, _Component);\n\n  function MarketsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MarketsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketsContainer).call(this));\n    _this.state = {\n      items: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(MarketsContainer, [{\n    key: \"_getTickerBySymbol\",\n    value: function _getTickerBySymbol(data) {\n      var ticker = {};\n      data.forEach(function (item) {\n        var symbol = item.symbol || item.s;\n        ticker[symbol] = {\n          symbol: symbol,\n          lastPrice: item.lastPrice || item.c,\n          priceChange: item.priceChange || item.p,\n          priceChangePercent: item.priceChangePercent || item.P,\n          highPrice: item.highPrice || item.h,\n          lowPrice: item.lowPrice || item.l,\n          quoteVolume: item.quoteVolume || item.q\n        };\n      });\n      return ticker;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var milnit = {\n        method: 'GET',\n        mode: 'no-cors'\n      };\n      fetch('https://api.binance.com/api/v1/exchangeInfo', milnit) //.then(res => res.json())\n      .then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"symbols: \", item.symbols);\n        })));\n      }\n    }\n  }]);\n\n  return MarketsContainer;\n}(Component);\n\nexport default MarketsContainer;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js"],"names":["React","Component","MarketsContainer","props","state","items","isLoaded","data","ticker","forEach","item","symbol","s","lastPrice","c","priceChange","p","priceChangePercent","P","highPrice","h","lowPrice","l","quoteVolume","q","milnit","method","mode","fetch","then","json","setState","map","symbols"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAIMC,gB;;;;;AAEJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACE,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFe;AAOpB;;;;uCAEoBC,I,EAAM;AACnB,UAAIC,MAAM,GAAG,EAAb;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAAAC,IAAI,EAAI;AACjB,YAAIC,MAAM,GAAGD,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACE,CAAjC;AACAJ,QAAAA,MAAM,CAACG,MAAD,CAAN,GAAiB;AACbA,UAAAA,MAAM,EAAEA,MADK;AAEbE,UAAAA,SAAS,EAAEH,IAAI,CAACG,SAAL,IAAkBH,IAAI,CAACI,CAFrB;AAGbC,UAAAA,WAAW,EAAEL,IAAI,CAACK,WAAL,IAAoBL,IAAI,CAACM,CAHzB;AAIbC,UAAAA,kBAAkB,EAAEP,IAAI,CAACO,kBAAL,IAA2BP,IAAI,CAACQ,CAJvC;AAKbC,UAAAA,SAAS,EAAET,IAAI,CAACS,SAAL,IAAkBT,IAAI,CAACU,CALrB;AAMbC,UAAAA,QAAQ,EAAEX,IAAI,CAACW,QAAL,IAAiBX,IAAI,CAACY,CANnB;AAObC,UAAAA,WAAW,EAAEb,IAAI,CAACa,WAAL,IAAoBb,IAAI,CAACc;AAPzB,SAAjB;AASH,OAXD;AAYA,aAAOhB,MAAP;AAEH;;;wCAGc;AAAA;;AAEf,UAAIiB,MAAM,GAAG;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAb;AACAC,MAAAA,KAAK,CAAC,6CAAD,EAAgDH,MAAhD,CAAL,CACI;AADJ,OAEKI,IAFL,CAEU,UAAAC,IAAI,EAAI;AACR,QAAA,MAAI,CAACC,QAAL,CAAc;AACZzB,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAAEyB;AAFK,SAAd;AAOL,OAVL;AAaH;;;6BAGS;AAAA,wBACqB,KAAK1B,KAD1B;AAAA,UACAE,QADA,eACAA,QADA;AAAA,UACWD,KADX,eACWA,KADX;;AAEN,UAAG,CAACC,QAAJ,EAAa;AACX,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAGK;AAED,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,KAAK,CAAC2B,GAAN,CAAU,UAAAtB,IAAI;AAAA,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACWA,IAAI,CAACuB,OADhB,CADa;AAAA,SAAd,CADH,CADF,CADF;AAWH;AACF;;;;EApE4BhC,S;;AAuE/B,eAAeC,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass MarketsContainer extends Component{\n\n  constructor(props) {\n    super();\n      this.state = {\n        items: [],\n        isLoaded: false,\n      };\n \n}\n\n  _getTickerBySymbol(data) {\n        let ticker = {}\n        data.forEach(item => {\n            let symbol = item.symbol || item.s;\n            ticker[symbol] = {\n                symbol: symbol,\n                lastPrice: item.lastPrice || item.c,\n                priceChange: item.priceChange || item.p,\n                priceChangePercent: item.priceChangePercent || item.P,\n                highPrice: item.highPrice || item.h,\n                lowPrice: item.lowPrice || item.l,\n                quoteVolume: item.quoteVolume || item.q,\n            }\n        })\n        return ticker;\n        \n    }\n\n\ncomponentDidMount(){\n\n    var milnit = { method: 'GET', mode: 'no-cors'};\n    fetch('https://api.binance.com/api/v1/exchangeInfo', milnit )\n        //.then(res => res.json())\n        .then(json => {\n              this.setState({\n                isLoaded: true, \n                items: json,\n                \n              })\n            \n      \n        });\n        \n        \n}\n\n\n  render(){\n    let { isLoaded , items } = this.state;\n    if(!isLoaded){\n      return <div>Loading...</div>\n    }\n    else {\n\n        return(\n          <div>\n            <ul>\n              {items.map(item => (\n                <li>\n                 symbols: {item.symbols}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n    }\n  }\n}\n\nexport default MarketsContainer;\n"]},"metadata":{},"sourceType":"module"}