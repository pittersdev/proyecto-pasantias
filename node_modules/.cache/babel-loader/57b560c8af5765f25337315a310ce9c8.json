{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js\";\nimport React, { Component } from 'react';\n\nvar MarketsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarketsContainer, _Component);\n\n  function MarketsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MarketsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketsContainer).call(this));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  } // _getTickerBySymbol(data) {\n  //       let ticker = {}\n  //       data.forEach(item => {\n  //           let symbol = item.symbol || item.s;\n  //           ticker[symbol] = {\n  //               symbol: symbol,\n  //               lastPrice: item.lastPrice || item.c,\n  //               priceChange: item.priceChange || item.p,\n  //               priceChangePercent: item.priceChangePercent || item.P,\n  //               highPrice: item.highPrice || item.h,\n  //               lowPrice: item.lowPrice || item.l,\n  //               quoteVolume: item.quoteVolume || item.q,\n  //           }\n  //       })\n  //       return ticker;\n  //       \n  //   }\n  //  \n\n\n  _createClass(MarketsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //return fetch('http://192.168.0.100:4440/24h')\n      return fetch('https://api.binance.com/api/v1/ticker/24hr').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        var ticker = _this2._getTickerBySymbol();\n\n        _this2.setState({\n          data: responseJson\n        });\n\n        _this2.props.dispatch({\n          type: 'UPDATE_MARKET_PAIRS',\n          data: ticker\n        });\n      }) //  .then((res) => res.json())\n      //  .then((respo) => {\n      //  console.log(respo)\n      //  let ticker = this._getTickerBySymbol((respo.data).data)\n      //  return ticker;\n      // }) \n      .catch(function (error) {\n        if (error === 'TypeError: Network request failed') {\n          console.log('error internet');\n        }\n\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //var {  datas  } = this.state;\n      // if(!isLoaded){\n      //   return <div>Loading...</div>\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.data.map(function (datas) {\n        return React.createElement(\"li\", {\n          key: datas,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"datas\");\n      })), \"holaaaaa\");\n    }\n  }]);\n\n  return MarketsContainer;\n}(Component);\n\nexport default MarketsContainer;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js"],"names":["React","Component","MarketsContainer","props","state","data","fetch","then","response","json","responseJson","console","log","ticker","_getTickerBySymbol","setState","dispatch","type","catch","error","map","datas"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,gB;;;;;AAEJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACE,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFe;AAUpB,G,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wCAIiB;AAAA;;AAEjB;AAEA,aAAOC,KAAK,CAAC,4CAAD,CAAL,CAEMC,IAFN,CAEW,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAFX,EAGMF,IAHN,CAGW,UAACG,YAAD,EAAkB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AACA,YAAIG,MAAM,GAAG,MAAI,CAACC,kBAAL,EAAb;;AACC,QAAA,MAAI,CAACC,QAAL,CAAc;AACbV,UAAAA,IAAI,EAAEK;AADO,SAAd;;AAID,QAAA,MAAI,CAACP,KAAL,CAAWa,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,qBADY;AAElBZ,UAAAA,IAAI,EAAEQ;AAFY,SAApB;AAID,OAdN,EAgBK;AACA;AACA;AACA;AACA;AACA;AArBL,OAwBMK,KAxBN,CAwBY,UAACC,KAAD,EAAW;AAChB,YAAGA,KAAK,KAAK,mCAAb,EAAiD;AAC/CR,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AACDD,QAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACD,OA7BN,CAAP;AA8BD;;;6BAGS;AACP;AACA;AACA;AACA;AAEK,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,GAAhB,CAAoB,UAAAC,KAAK;AAAA,eAExB;AAAI,UAAA,GAAG,EAAGA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFwB;AAAA,OAAzB,CADH,CADF,aAFF;AAgBL;;;;EA9F4BpB,S;;AAiG/B,eAAeC,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass MarketsContainer extends Component{\n\n  constructor(props) {\n    super();\n      this.state = {\n        data: [],\n\n\n       \n        \n      };  \n \n}\n\n  // _getTickerBySymbol(data) {\n  //       let ticker = {}\n  //       data.forEach(item => {\n  //           let symbol = item.symbol || item.s;\n  //           ticker[symbol] = {\n  //               symbol: symbol,\n  //               lastPrice: item.lastPrice || item.c,\n  //               priceChange: item.priceChange || item.p,\n  //               priceChangePercent: item.priceChangePercent || item.P,\n  //               highPrice: item.highPrice || item.h,\n  //               lowPrice: item.lowPrice || item.l,\n  //               quoteVolume: item.quoteVolume || item.q,\n  //           }\n  //       })\n  //       return ticker;\n  //       \n  //   }\n  //  \n    \n\n\ncomponentDidMount(){\n\n  //return fetch('http://192.168.0.100:4440/24h')\n  \n  return fetch('https://api.binance.com/api/v1/ticker/24hr')\n            \n              .then((response) => response.json())\n              .then((responseJson) => {\n                console.log(responseJson)  \n                let ticker = this._getTickerBySymbol()         \n                 this.setState({\n                  data: responseJson\n                })\n                \n                this.props.dispatch({\n                  type: 'UPDATE_MARKET_PAIRS',\n                  data: ticker\n              })\n              })\n\n              //  .then((res) => res.json())\n              //  .then((respo) => {\n              //  console.log(respo)\n              //  let ticker = this._getTickerBySymbol((respo.data).data)\n              //  return ticker;\n              // }) \n              \n              \n              .catch((error) => {\n                if(error === 'TypeError: Network request failed'){\n                  console.log('error internet')\n                }\n                console.error(error);\n              });      \n}\n \n\n  render(){\n   //var {  datas  } = this.state;\n   // if(!isLoaded){\n   //   return <div>Loading...</div>\n   // }\n    \n        return(\n\n          <div>\n            <ul>\n              {this.state.data.map(datas => (\n              \n                <li key= {datas}>datas</li>\n\n              ))} \n              \n            </ul>\n            \n           holaaaaa\n          </div>\n        )\n    \n  }\n}\n\nexport default MarketsContainer;\n"]},"metadata":{},"sourceType":"module"}