{"ast":null,"code":"import _classCallCheck from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luis/Documentos/GrafiTTraders/grafittraders/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js\";\nimport React, { Component } from 'react';\n\nvar MarketsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarketsContainer, _Component);\n\n  function MarketsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MarketsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketsContainer).call(this));\n    _this.state = {\n      responseJson: [],\n      symbol: [],\n      lastPrice: [],\n      priceChange: [],\n      priceChangePercent: [],\n      highPrice: [],\n      lowPrice: [],\n      quoteVolume: []\n    };\n    return _this;\n  } // _getTickerBySymbol(data) {\n  //       let ticker = {}\n  //       data.forEach(item => {\n  //           let symbol = item.symbol || item.s;\n  //           ticker[symbol] = {\n  //               symbol: symbol,\n  //               lastPrice: item.lastPrice || item.c,\n  //               priceChange: item.priceChange || item.p,\n  //               priceChangePercent: item.priceChangePercent || item.P,\n  //               highPrice: item.highPrice || item.h,\n  //               lowPrice: item.lowPrice || item.l,\n  //               quoteVolume: item.quoteVolume || item.q,\n  //           }\n  //       })\n  //       return ticker;\n  //       \n  //   }\n  //  \n\n\n  _createClass(MarketsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //return fetch('http://192.168.0.100:4440/24h')\n      return fetch('https://api.binance.com/api/v1/ticker/24hr') //.then((response) => response.json())\n      .then(function (responseJson) {\n        console.log(responseJson);\n\n        _this2.setState({\n          response: responseJson.data\n        });\n      }) //  .then((res) => res.json())\n      //  .then((respo) => {\n      //  console.log(respo)\n      //  let ticker = this._getTickerBySymbol((respo.data).data)\n      //  return ticker;\n      // }) \n      .catch(function (error) {\n        if (error === 'TypeError: Network request failed') {\n          console.log('error internet');\n        }\n\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //var {  datas  } = this.state;\n      // if(!isLoaded){\n      //   return <div>Loading...</div>\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.response.map(function (data) {\n        return React.createElement(\"li\", {\n          key: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \" data \");\n      })), \"holaaaaa\");\n    }\n  }]);\n\n  return MarketsContainer;\n}(Component);\n\nexport default MarketsContainer;","map":{"version":3,"sources":["/home/luis/Documentos/GrafiTTraders/grafittraders/src/markets/markets-container.js"],"names":["React","Component","MarketsContainer","props","state","responseJson","symbol","lastPrice","priceChange","priceChangePercent","highPrice","lowPrice","quoteVolume","fetch","then","console","log","setState","response","data","catch","error","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,gB;;;;;AAEJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACE,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,SAAS,EAAE,EALA;AAMXC,MAAAA,WAAW,EAAE,EANF;AAOXC,MAAAA,kBAAkB,EAAE,EAPT;AAQXC,MAAAA,SAAS,EAAE,EARA;AASXC,MAAAA,QAAQ,EAAE,EATC;AAUXC,MAAAA,WAAW,EAAE;AAVF,KAAb;AAFe;AAgBpB,G,CAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;wCAIiB;AAAA;;AAEjB;AAEA,aAAOC,KAAK,CAAC,4CAAD,CAAL,CAEK;AAFL,OAGMC,IAHN,CAGW,UAAAT,YAAY,EAAI;AACpBU,QAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;;AACC,QAAA,MAAI,CAACY,QAAL,CAAe;AACdC,UAAAA,QAAQ,EAAEb,YAAY,CAACc;AADT,SAAf;AAGF,OARN,EAUK;AACA;AACA;AACA;AACA;AACA;AAfL,OAkBMC,KAlBN,CAkBY,UAACC,KAAD,EAAW;AAChB,YAAGA,KAAK,KAAK,mCAAb,EAAiD;AAC/CN,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AACDD,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD,OAvBN,CAAP;AAwBD;;;6BAGS;AACP;AACA;AACA;AACA;AAEK,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjB,KAAL,CAAWc,QAAX,CAAoBI,GAApB,CAAyB,UAAAH,IAAI;AAAA,eAC5B;AAAI,UAAA,GAAG,EAAGA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD4B;AAAA,OAA7B,CADH,CADF,aAFF;AAaL;;;;EA3F4BlB,S;;AA8F/B,eAAeC,gBAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass MarketsContainer extends Component{\n\n  constructor(props) {\n    super();\n      this.state = {\n        responseJson: [],\n\n\n        symbol: [],\n        lastPrice: [],\n        priceChange: [], \n        priceChangePercent: [],\n        highPrice: [],\n        lowPrice: [],\n        quoteVolume: []\n        \n      };  \n \n}\n\n  // _getTickerBySymbol(data) {\n  //       let ticker = {}\n  //       data.forEach(item => {\n  //           let symbol = item.symbol || item.s;\n  //           ticker[symbol] = {\n  //               symbol: symbol,\n  //               lastPrice: item.lastPrice || item.c,\n  //               priceChange: item.priceChange || item.p,\n  //               priceChangePercent: item.priceChangePercent || item.P,\n  //               highPrice: item.highPrice || item.h,\n  //               lowPrice: item.lowPrice || item.l,\n  //               quoteVolume: item.quoteVolume || item.q,\n  //           }\n  //       })\n  //       return ticker;\n  //       \n  //   }\n  //  \n    \n\n\ncomponentDidMount(){\n\n  //return fetch('http://192.168.0.100:4440/24h')\n  \n  return fetch('https://api.binance.com/api/v1/ticker/24hr')\n            \n              //.then((response) => response.json())\n              .then(responseJson => {\n                console.log(responseJson)           \n                 this.setState ({\n                  response: responseJson.data\n                })\n              })\n\n              //  .then((res) => res.json())\n              //  .then((respo) => {\n              //  console.log(respo)\n              //  let ticker = this._getTickerBySymbol((respo.data).data)\n              //  return ticker;\n              // }) \n              \n              \n              .catch((error) => {\n                if(error === 'TypeError: Network request failed'){\n                  console.log('error internet')\n                }\n                console.error(error);\n              });      \n}\n \n\n  render(){\n   //var {  datas  } = this.state;\n   // if(!isLoaded){\n   //   return <div>Loading...</div>\n   // }\n    \n        return(\n\n          <div>\n            <ul>\n              {this.state.response.map( data => (\n                <li key= {data}> data </li>\n\n              ))} \n            </ul>\n           holaaaaa\n          </div>\n        )\n    \n  }\n}\n\nexport default MarketsContainer;\n"]},"metadata":{},"sourceType":"module"}